{"version":3,"sources":["Components/ContactItem/ContactItem.module.css","Components/App.module.css","Components/ContactForm/ContactForm.module.css","Components/Filter/Filter.module.css","Components/ContactForm/ContactForm.js","Components/Filter/Filter.js","Components/ContactItem/ContactItem.js","redux/action/contacts.js","redux/operations/contactOperations.js","redux/selectors/contacts-selectors.js","Components/App.js","redux/reducer/contacts.js","redux/store.js","index.js"],"names":["module","exports","initialState","number","name","ContactForm","setAlert","addContact","contacts","useState","stateForm","setStateForm","handlerInput","target","value","className","styles","onSubmit","e","preventDefault","singleContact","some","contact","titleLabel","inputForm","type","placeholder","onChange","formButton","Filter","filter","filterHandler","wrapperSearch","filterLabel_span","filterInput","ContactItem","id","removeContact","contactItem","paragraph","removeBtn","onClick","addContactRequest","createAction","addContactSuccess","addContactError","getContactsRequest","getContactsSuccess","getContactsError","removeContactsRequest","removeContactsSuccess","removeContactsError","editInputFilter","contactObj","payload","dispatch","a","axios","post","result","data","get","delete","contactsSelector","state","allContactsSelector","createSelector","items","filterSelector","getFilteredContacts","length","toLowerCase","includes","App","useSelector","filteredContacts","useDispatch","start","alert","useEffect","operations","console","log","stylesApp","wrapper","CSSTransition","classNames","enterActive","alertBoxEnterActive","exitActive","alertBoxExitActive","mountOnEnter","unmountOnExit","timeout","in","alertBox","alertBtn","titleEnterActive","title","actions","TransitionGroup","contactsList","component","map","listItemEnterActive","listItemExitActive","createReducer","el","defaultMiddleware","getDefaultMiddleware","store","configureStore","reducer","middleware","logger","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.41a77e64.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"ContactItem_contactItem__D_wUJ\",\"listItemEnterActive\":\"ContactItem_listItemEnterActive__28bVf\",\"task\":\"ContactItem_task__20LfY\",\"listItemExitActive\":\"ContactItem_listItemExitActive__1wZ3F\",\"hinge\":\"ContactItem_hinge__m3PqO\",\"removeBtn\":\"ContactItem_removeBtn__29UAM\",\"paragraph\":\"ContactItem_paragraph__1OKz_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__3tY0G\",\"formButton\":\"App_formButton__2c67t\",\"title\":\"App_title__3V7C6\",\"titleEnterActive\":\"App_titleEnterActive__3N9_4\",\"task\":\"App_task__27kAO\",\"contactsList\":\"App_contactsList__2K84T\",\"alertBox\":\"App_alertBox__1Gmo0\",\"alertBoxEnterActive\":\"App_alertBoxEnterActive__3Ldyv\",\"alertBoxExitActive\":\"App_alertBoxExitActive__1s6lO\",\"hinge\":\"App_hinge__Gxptf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactForm\":\"ContactForm_ContactForm__212Qj\",\"titleLabel\":\"ContactForm_titleLabel__2badp\",\"inputForm\":\"ContactForm_inputForm__2de9Q\",\"formButton\":\"ContactForm_formButton__fthjp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterInput\":\"Filter_filterInput__AdX91\",\"filterLabel_span\":\"Filter_filterLabel_span__oJAe_\",\"wrapperSearch\":\"Filter_wrapperSearch__3WE7k\"};","import React, { useState } from 'react';\n\nimport styles from './ContactForm.module.css';\n\nconst initialState = {\n  number: \"\",\n  name: \"\",\n}\n\nconst ContactForm = ({ setAlert, addContact, contacts }) => {\n  const [stateForm, setStateForm] = useState(initialState);\n  const { name, number } = stateForm;\n\n  const handlerInput = ({ target }) => {\n    const { name, value } = target;\n    setStateForm({ ...stateForm, [name]: value });\n  }\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    const { name, number } = e.target;\n    const singleContact = {\n      name: name.value,\n      number: number.value,\n    }\n    if (contacts.some(contact => contact.name === name.value)) {\n      setAlert(true)\n    } else {\n      addContact(singleContact)\n      setStateForm({ ...initialState })\n    }\n  }\n\n  return (\n    <form className={styles.ContactForm} onSubmit={submitHandler}>\n      <label>\n        <span className={styles.titleLabel}>Name</span>\n        <input\n          className={styles.inputForm}\n          type=\"text\"\n          value={name}\n          name=\"name\"\n          placeholder=\"Name\"\n          onChange={handlerInput}\n        />\n      </label>\n      <label>\n        <span className={styles.titleLabel}> Number</span>\n        <input\n          className={styles.inputForm}\n          type=\"text\"\n          value={number}\n          name=\"number\"\n          placeholder=\"Number\"\n          onChange={handlerInput}\n        />\n      </label>\n      <button className={styles.formButton} type=\"submit\">Add contact</button>\n    </form>\n  );\n}\n\nexport default ContactForm;\n","import React from 'react';\nimport PropTypes from \"prop-types\";\n\nimport styles from './Filter.module.css'\n\nconst Filter = ({ filter, filterHandler }) => (\n  <>\n    <div className={styles.wrapperSearch}>\n      <label>\n        <span className={styles.filterLabel_span}> Find contacts by name</span>\n        <input\n          className={styles.filterInput}\n          type=\"text\"\n          name=\"filter\"\n          value={filter}\n          onChange={filterHandler}\n          placeholder=\"Search\"\n        />\n      </label>\n    </div>\n  </>\n);\n\n\nexport default Filter;\n\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  filterHandler: PropTypes.func.isRequired\n}","import React from 'react';\n\nimport styles from './ContactItem.module.css'\n\n\nconst ContactItem = ({ id, name, number, removeContact }) => (\n  <li className={styles.contactItem}>\n    <p className={styles.paragraph}>{name}: {number}</p>\n    <button\n      className={styles.removeBtn}\n      type=\"button\"\n      onClick={removeContact(id)}>\n      X\n    </button>\n  </li>\n);\n\nexport default ContactItem;\n\n","import { createAction } from '@reduxjs/toolkit';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport const addContactRequest = createAction('contacts/addRequest');\nexport const addContactSuccess = createAction('contacts/addSuccess');\nexport const addContactError = createAction('contacts/addError');\n\nexport const getContactsRequest = createAction('contacts/getRequest');\nexport const getContactsSuccess = createAction('contacts/getSuccess');\nexport const getContactsError = createAction('contacts/getError');\n\n\nexport const removeContactsRequest = createAction('contacts/removeRequest');\nexport const removeContactsSuccess = createAction('contacts/removeSuccess');\nexport const removeContactsError = createAction('contacts/removeError');\n\nexport const addContact = createAction('contacts/add', contactObj => ({\n  payload: {\n    contactObj,\n  }\n}));\nexport const removeContact = createAction('contacts/remove');\nexport const setContacts = createAction('contacts/set');\nexport const editInputFilter = createAction('filter/edit');\n","import axios from 'axios';\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  getContactsRequest,\n  getContactsSuccess,\n  getContactsError,\n  removeContactsRequest,\n  removeContactsSuccess,\n  removeContactsError\n} from '../action/contacts';\n\nconst addContact = (contactObj) => async (dispatch) => {\n  try {\n    dispatch(addContactRequest());\n    const result = await axios.post('http://localhost:5000/contacts', contactObj);\n    dispatch(addContactSuccess(result.data));\n  } catch (error) {\n    dispatch(addContactError(error));\n  }\n}\n\nconst getContacts = () => async (dispatch) => {\n  try {\n    dispatch(getContactsRequest());\n    const result = await axios.get('http://localhost:5000/contacts');\n    dispatch(getContactsSuccess(result.data));\n  } catch (error) {\n    dispatch(getContactsError(error));\n  }\n}\n\nconst removeContact = id => async (dispatch) => {\n  try {\n    dispatch(removeContactsRequest());\n    const result = await axios.delete(`http://localhost:5000/contacts/${id}`);\n    dispatch(removeContactsSuccess(id));\n  } catch (error) {\n    dispatch(removeContactsError(error));\n  }\n}\n\nexport default {\n  addContact,\n  getContacts,\n  removeContact\n}\n","import { createSelector } from \"reselect\";\n\nexport const contactsSelector = (state) => state.contacts;\n\nexport const allContactsSelector = createSelector(\n  contactsSelector,\n  (contacts) => contacts.items,\n)\n\nexport const filterSelector = createSelector(\n  contactsSelector,\n  (contacts) => contacts.filter,\n)\n\nexport const getFilteredContacts = createSelector(\n  allContactsSelector,\n  filterSelector,\n  (contacts, filter) => {\n    if (contacts.length === 0) {\n      return [];\n    }\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n)\n","import React, { useState, useEffect, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\nimport stylesApp from './App.module.css';\nimport styles from './ContactItem/ContactItem.module.css';\n\nimport ContactForm from './ContactForm/ContactForm';\nimport Filter from './Filter/Filter';\nimport ContactItem from '../Components/ContactItem/ContactItem';\n\nimport * as actions from '../redux/action/contacts';\nimport operations from '../redux/operations/contactOperations';\nimport { allContactsSelector, filterSelector, getFilteredContacts } from '../redux/selectors/contacts-selectors';\n\n// const filterContacts = (contacts, filter) => {\n//   if (contacts.length === 0) {\n//     return [];\n//   }\n//   return contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()));\n// }\n\nconst App = () => {\n  const contacts = useSelector(allContactsSelector);\n  const filter = useSelector(filterSelector);\n  const filteredContacts = useSelector(getFilteredContacts);\n\n  const dispatch = useDispatch();\n  const [start, setStart] = useState(false);\n  const [alert, setAlert] = useState(false);\n\n  // console.log(getContacts(contacts, filter));\n  // const firstRender = useRef(false);\n\n  // useEffect(() => {\n  //   if (firstRender.current) {\n  //     localStorage.setItem('contacts', JSON.stringify(contacts));\n  //   } else {\n  //     firstRender.current = true;\n  //   }\n  // }, [contacts]);\n\n  useEffect(() => {\n    dispatch(operations.getContacts());\n  }, [])\n  console.log(contacts);\n  const filterHandler = (e) => {\n    dispatch(actions.editInputFilter(e.target.value));\n  }\n\n  const removeContact = (id) => (e) => {\n    dispatch(operations.removeContact(id));\n\n  }\n\n  const addContact = (singleContact) => {\n    dispatch(operations.addContact(singleContact))\n  }\n\n  // const filteredContacts = filterContacts(contacts, filter);\n\n  return (\n    <div className={stylesApp.wrapper}>\n      <CSSTransition classNames={{\n        enterActive: stylesApp.alertBoxEnterActive,\n        exitActive: stylesApp.alertBoxExitActive\n      }}\n        mountOnEnter\n        unmountOnExit\n        timeout={300}\n        in={alert}>\n\n        <div className={stylesApp.alertBox}>\n          <h2>{`The name is already a contact`}</h2>\n          <button\n            onClick={() => setAlert(false)}\n            className={styles.alertBtn}\n            type=\"button\"\n          >X\n          </button>\n        </div>\n      </CSSTransition>\n      <CSSTransition classNames={{\n        enterActive: stylesApp.titleEnterActive,\n      }} timeout={800} in={start}>\n        <h2 className={stylesApp.title}>Phonebook </h2>\n      </CSSTransition>\n\n      <ContactForm setAlert={setAlert} addContact={addContact} contacts={contacts} />\n      <Filter filter={filter} filterHandler={filterHandler} />\n\n      <TransitionGroup className={stylesApp.contactsList} component=\"ul\">\n        {filteredContacts.map(contact =>\n          <CSSTransition\n            key={contact.id}\n            timeout={800}\n            classNames={{\n              enterActive: styles.listItemEnterActive,\n              exitActive: styles.listItemExitActive,\n            }}\n          >\n            <ContactItem {...contact} removeContact={removeContact} />\n          </CSSTransition>\n        )}\n\n      </TransitionGroup>\n\n    </div>\n  );\n\n}\n\nexport default App;\n","import { createReducer } from '@reduxjs/toolkit';\n\nimport {\n  editInputFilter,\n  addContactSuccess,\n  getContactsSuccess,\n  removeContactsSuccess\n} from '../action/contacts';\n\nconst initialState = {\n  items: [],\n  filter: ''\n};\n\nexport default createReducer(initialState, {\n  [addContactSuccess]: (state, { payload }) => ({\n    ...state,\n    items: [...state.items, payload],\n  }),\n  [getContactsSuccess]: (state, { payload }) => ({\n    ...state,\n    items: [...payload],\n  }),\n  [removeContactsSuccess]: (state, { payload }) => ({\n    ...state,\n    items: state.items.filter(el => el.id !== payload),\n  }),\n  [editInputFilter]: (state, { payload }) => ({\n    ...state,\n    filter: payload,\n  }),\n})\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport contacts from './reducer/contacts';\nimport logger from 'redux-logger';\n\nconst defaultMiddleware = getDefaultMiddleware()\n\nconst store = configureStore({\n  reducer: {\n    contacts,\n  },\n  middleware: [...defaultMiddleware, logger]\n})\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store.js';\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}